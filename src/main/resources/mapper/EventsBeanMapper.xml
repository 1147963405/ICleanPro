<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iclean.pt.sbgl.dao.EventsBeanMapper" >
  <resultMap id="BaseResultMap" type="com.iclean.pt.sbgl.bean.EventsBean" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="context" property="context" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="device_id" property="deviceId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, context, type, device_id, status, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_event
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectBySelective" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_event
    <where>
      <if test="count==0">
        device_id = #{deviceId,jdbcType=INTEGER} and status = #{status,jdbcType=INTEGER}
      </if>
      <if test="count!=0">
        device_id = #{deviceId,jdbcType=INTEGER} and status = #{status,jdbcType=INTEGER}  LIMIT #{startIndex},#{count}
      </if>
    </where>
  </select>


  <select id="selectEventsByUserId" resultType="java.util.Map" >

     select
    r.id,r.context,r.type,r.status,FROM_UNIXTIME(r.update_time, '%Y-%m-%d %H:%i:%S') as update_time,t.name as  device_name
    from (select
    *
    from tb_event where device_id in (select device_id from tb_customer_device where customer_id in(select customer_id from tb_user where id=#{param1}))) r join
     tb_device_info t on r.device_id=t.id
  </select>



  <select id="selectEventsByParams" resultType="java.util.Map" >

     select
    r.id,r.context,r.type,r.status,FROM_UNIXTIME(r.update_time, '%Y-%m-%d %H:%i:%S') as update_time,t.name as  device_name
    from (select
    *
    from tb_event where device_id in (select device_id from tb_customer_device where customer_id in(select customer_id from tb_user where id=${userId}))) r join
     tb_device_info t on r.device_id=t.id ${eventsParams}
  </select>



  <select id="selectEvents" resultType="java.util.Map"  >

    select
    r.id,r.context,r.type,r.status,FROM_UNIXTIME(r.update_time, '%Y-%m-%d %H:%i:%S') as update_time,t.name as  device_name
    from (select
    *
    from tb_event where device_id in (select device_id from tb_customer_device where customer_id in(select id from tb_customer))) r join
      tb_device_info t on r.device_id=t.id
      </select>



  <select id="selectEventsBySelective" resultType="java.util.Map"  >

    select
    r.id,r.context,r.type,r.status,FROM_UNIXTIME(r.update_time, '%Y-%m-%d %H:%i:%S') as update_time,t.name as  device_name
    from (select
    *
    from tb_event where device_id in (select device_id from tb_customer_device where customer_id in(select id from tb_customer))) r join
      tb_device_info t on r.device_id=t.id  ${eventsParams}
      </select>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_event
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iclean.pt.sbgl.bean.EventsBean" >
    insert into tb_event (id, context, type, 
      device_id, status, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{context,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{deviceId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iclean.pt.sbgl.bean.EventsBean" >
    insert into tb_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="context != null" >
        context,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="context != null" >
        #{context,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iclean.pt.sbgl.bean.EventsBean" >
    update tb_event
    <set >
      <if test="context != null" >
        context = #{context,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iclean.pt.sbgl.bean.EventsBean" >
    update tb_event
    set context = #{context,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>