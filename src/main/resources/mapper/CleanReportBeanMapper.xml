<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iclean.pt.sbgl.dao.CleanReportBeanMapper">
  <resultMap id="BaseResultMap" type="com.iclean.pt.sbgl.bean.CleanReportBean">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="map_id" jdbcType="INTEGER" property="mapId" />
    <result column="device_id" jdbcType="INTEGER" property="deviceId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="clean_area" jdbcType="REAL" property="cleanArea" />
    <result column="use_time" jdbcType="INTEGER" property="useTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="report" jdbcType="VARCHAR" property="report" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, map_id, device_id, name, clean_area, use_time, type, report, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_clean_report
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectSelective"  resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from tb_clean_report
    where
    1=1
      <if test="count==0">
      and   device_id = #{deviceId,jdbcType=INTEGER}
      </if>
      <if test="count!=0">
       and device_id = #{deviceId,jdbcType=INTEGER} LIMIT #{startIndex},#{count}
      </if>
  </select>


  <select id="selectCleanRportsByUserId" resultType="java.util.Map">
    select
    r.id,r.map_id,r.device_id,r.name,r.clean_area,r.use_time,r.`type`,r.report,FROM_UNIXTIME(r.update_time, '%Y-%m-%d %H:%i:%S') as update_time,m.uuid,m.name as  map_name,t.name as  device_name,t.serial as device_serial,t.type_id as  device_type_id
    from (select
    *
    from tb_clean_report where device_id in (select device_id from tb_customer_device where customer_id in(select customer_id from tb_user where  id=#{param1}))) r join
     tb_device_info t on r.device_id=t.id  join tb_maps m on r.map_id=m.id
  </select>


  <select id="selectCleanRportsByParams" resultType="java.util.Map">
    select
    r.id,r.map_id,r.device_id,r.name,r.clean_area,r.use_time,r.`type`,r.report,FROM_UNIXTIME(r.update_time, '%Y-%m-%d %H:%i:%S') as update_time,m.uuid,m.name as  map_name,t.name as  device_name,t.serial as device_serial,t.type_id as  device_type_id
    from (select
    *
    from tb_clean_report where device_id in (select device_id from tb_customer_device where customer_id in(select customer_id from tb_user where  id=${userId}))) r join
     tb_device_info t on r.device_id=t.id  join tb_maps m on r.map_id=m.id ${cleanParams}
  </select>


  <select id="selectCleanRports" resultType="java.util.Map">
    select
    r.id,r.map_id,r.device_id,r.name,r.clean_area,r.use_time,r.`type`,r.report,FROM_UNIXTIME(r.update_time, '%Y-%m-%d %H:%i:%S') as update_time,m.uuid,
    m.name as  map_name,t.name as  device_name,t.serial as device_serial,t.type_id as  device_type_id
    from (select
    *
    from tb_clean_report where device_id in (select device_id from tb_customer_device where customer_id in(select id from tb_customer))) r join
     tb_device_info t on r.device_id=t.id  join tb_maps m on r.map_id=m.id
  </select>

  <select id="selectCleanRportsBySelective" resultType="java.util.Map">
    select
    r.id,r.map_id,r.device_id,r.name,r.clean_area,r.use_time,r.`type`,r.report,FROM_UNIXTIME(r.update_time, '%Y-%m-%d %H:%i:%S') as update_time,m.uuid,
    m.name as  map_name,t.name as  device_name,t.serial as device_serial,t.type_id as  device_type_id
    from (select
    *
    from tb_clean_report where device_id in (select device_id from tb_customer_device where customer_id in(select id from tb_customer))) r join
     tb_device_info t on r.device_id=t.id  join tb_maps m on r.map_id=m.id  ${cleanParams}
  </select>


  <select id="selectCleanRportsTotal" resultType="java.util.Map">
   select
    sum(c.clean_area) as top_clean_area,sum(c.use_time) as top_use_time
    from tb_clean_report  c join  tb_device_info d on c.device_id=d.id
  </select>

  <select id="selectCleanRportsTotalByCustomerId" resultType="java.util.Map">
select
    sum(r.clean_area) as top_clean_area,sum(r.use_time) as top_use_time
    from (select
    *
    from tb_clean_report where device_id in (select device_id from tb_customer_device where customer_id=#{customerId,jdbcType=INTEGER})) r
  </select>









  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_clean_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.iclean.pt.sbgl.bean.CleanReportBean">
    update tb_clean_report
    <set>
      <if test="mapId != null">
        map_id = #{mapId,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="cleanArea != null">
        clean_area = #{cleanArea,jdbcType=REAL},
      </if>
      <if test="useTime != null">
        use_time = #{useTime,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="report != null">
        report = #{report,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iclean.pt.sbgl.bean.CleanReportBean">
    update tb_clean_report
    set map_id = #{mapId,jdbcType=INTEGER},
      device_id = #{deviceId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      clean_area = #{cleanArea,jdbcType=REAL},
      use_time = #{useTime,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      report = #{report,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>