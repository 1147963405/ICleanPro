<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--导入属性配置-->
    <properties resource="generator.properties"></properties>
    <!--指定特定数据库的jdbc驱动jar包的位置-->
    <classPathEntry location="${jdbc.driverLocation}"/>

    <context id="default" targetRuntime="MyBatis3">

        <!-- 注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true" /><!-- 是否取消注释 -->
            <property name="suppressDate" value="true" />  <!-- 是否生成注释代时间戳 -->
        </commentGenerator>

        <!--jdbc的数据库连接 -->
        <jdbcConnection
                driverClass="${jdbc.driverClass}"
                connectionURL="${jdbc.connectionURL}"
                userId="${jdbc.userId}"
                password="${jdbc.password}">
        </jdbcConnection>

        <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
       <!-- <javaModelGenerator targetPackage="com.iclean.pt.yhgl.bean"
                            targetProject="src/main/java">

            &lt;!&ndash; 是否允许子包，即targetPackage.schemaName.tableName &ndash;&gt;
            <property name="enableSubPackages" value="false"/>
            &lt;!&ndash; 是否对model添加 构造函数 &ndash;&gt;
            <property name="constructorBased" value="true"/>
            &lt;!&ndash; 是否对类CHAR类型的列的数据进行trim操作 &ndash;&gt;
            <property name="trimStrings" value="true"/>
            &lt;!&ndash; 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 &ndash;&gt;
            &lt;!&ndash;<property name="immutable" value="false"/>&ndash;&gt;
        </javaModelGenerator>-->
        <!-- 生成Pojo包名和位置 -->
        <javaModelGenerator targetPackage="com.iclean.pt.sbgl.bean"
                            targetProject="src/main/java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true" />
            <!-- 清理前后的空格 -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--在resources目录下的mapper文件，生成数据库的表对应的xml文件 -->
        <sqlMapGenerator targetPackage="mapper"
                         targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成dao层的java代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator targetPackage="com.iclean.pt.sbgl.dao"
                             targetProject="src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>

        <!-- 数据表名及实体类名称  -->
        <table tableName="tb_customer_device" domainObjectName="ModuleVersionBean"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <columnOverride column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="file_name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
            <!--<columnOverride column="status" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="appendfile" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="description" javaType="java.lang.String" jdbcType="VARCHAR" />-->
            <!--<columnOverride column="module_info" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="last_located_address" javaType="java.lang.String" jdbcType="VARCHAR" />
            <columnOverride column="description" javaType="java.lang.String" jdbcType="VARCHAR" />-->
        </table>
    </context>

</generatorConfiguration>